<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.imooc.mapper.ItemsMapperCustom">


    <select id="queryItemComments" parameterType="map" resultType="com.imooc.pojo.vo.ItemCommentVO">
        SELECT
        ic.comment_level as commentLevel,
        ic.content as content,
        ic.sepc_name specName,
        ic.created_time createdTime,
        u.face as userFace,
        u.nickname nickname
        from
        items_comments ic
        LEFT JOIN
        users u
        on ic.user_id = u.id
        where ic.item_id = #{paramsMap.itemId}
        <if test="paramsMap.level != null and paramsMap.level != ''">
            and ic.comment_level = #{paramsMap.level}
        </if>
    </select>

    <select id="searchItems" parameterType="map" resultType="com.imooc.pojo.vo.SearchItemVO">
        SELECT
        i.id as itemId,
        i.item_name as itemName,
        i.sell_counts as sellCounts,
        ii.url as imgUrl,
        tempSpec.priceDiscount price
        FROM
        items i
        LEFT JOIN items_img ii ON i.id = ii.item_id
        LEFT JOIN
        (
        SELECT item_id,MIN(price_discount) priceDiscount
        FROM
        items_spec
        GROUP BY
        item_id
        ) tempSpec
        on i.id=tempSpec.item_id
        where is_main = 1
        <if test=" paramsMap.keywords != null and paramsMap.keywords != '' ">
            and i.item_name like '%${paramsMap.keywords}%'
        </if>
        order by
        <choose>
            <!--
                k: 默认排序
                c：销量排序
                p：价格排序
            -->
            <when test=" paramsMap.sort == &quot;c&quot; ">
                i.sell_counts desc
            </when>
            <when test=" paramsMap.sort == &quot;c&quot; ">
                tempSpec.priceDiscount asc
            </when>
            <otherwise>
                i.item_name asc
            </otherwise>
        </choose>
    </select>

    <select id="searchItemsByThirdCat" parameterType="map" resultType="com.imooc.pojo.vo.SearchItemVO">
        SELECT
        i.id as itemId,
        i.item_name as itemName,
        i.sell_counts as sellCounts,
        ii.url as imgUrl,
        tempSpec.priceDiscount price
        FROM
        items i
        LEFT JOIN items_img ii ON i.id = ii.item_id
        LEFT JOIN
        (
        SELECT item_id,MIN(price_discount) priceDiscount
        FROM
        items_spec
        GROUP BY
        item_id
        ) tempSpec
        on i.id=tempSpec.item_id
        where is_main = 1
        and i.cat_id like '%${paramsMap.catId}%'
        order by
        <choose>
            <!--
                k: 默认排序
                c：销量排序
                p：价格排序
            -->
            <when test=" paramsMap.sort == &quot;c&quot; ">
                i.sell_counts desc
            </when>
            <when test=" paramsMap.sort == &quot;c&quot; ">
                tempSpec.priceDiscount asc
            </when>
            <otherwise>
                i.item_name asc
            </otherwise>
        </choose>
    </select>

    <select id="queryItemsBySpecIds" parameterType="List" resultType="com.imooc.pojo.vo.ShopcartVO">
    SELECT
	    t_items.id itemId,
	    t_items.item_name itemName,
	    t_item_spec.id specId,
	    t_item_spec.`name` specName,
	    t_item_img.url itemImgUrl,
	    t_item_spec.price_discount priceDiscount,
	    t_item_spec.price_normal priceNormal
    FROM
	    items t_items
	LEFT JOIN items_spec t_item_spec ON t_items.id = t_item_spec.item_id
	LEFT JOIN items_img t_item_img ON t_items.id = t_item_img.item_id
    WHERE
	    t_item_img.is_main = 1
	AND t_item_spec.id IN
	<foreach collection="paramsList" index="index" item="specId" open="(" close=")" separator=",">
        #{specId}
    </foreach>
    </select>
    
    <update id="decreaseItemSpecStock">
        update items_spec
        set stock = stock - #{pendingCounts}
        where id = #{specId}
        and stock >= #{pendingCounts}

    </update>
</mapper>